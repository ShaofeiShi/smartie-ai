---
import Layout from '../layouts/Layout.astro';
---

<Layout title="Password Protection">
  <main class="h-screen col-fcc login-content">
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width="48"
      height="48"
      viewBox="0 0 32 32"
      ><g fill="none"
        ><path
          fill="#F8312F"
          d="M5 3.5a1.5 1.5 0 0 1-1 1.415V12l2.16 5.487L4 23c-1.1 0-2-.9-2-1.998v-7.004a2 2 0 0 1 1-1.728V4.915A1.5 1.5 0 1 1 5 3.5Zm25.05.05c0 .681-.44 1.26-1.05 1.468V12.2c.597.347 1 .994 1 1.73v7.01c0 1.1-.9 2-2 2l-2.94-5.68L28 11.93V5.018a1.55 1.55 0 1 1 2.05-1.468Z"
        ></path><path
          fill="#FFB02E"
          d="M11 4.5A1.5 1.5 0 0 1 12.5 3h7a1.5 1.5 0 0 1 .43 2.938c-.277.082-.57.104-.847.186l-3.053.904l-3.12-.908c-.272-.08-.56-.1-.832-.18A1.5 1.5 0 0 1 11 4.5Z"
        ></path><path
          fill="#CDC4D6"
          d="M22.05 30H9.95C6.66 30 4 27.34 4 24.05V12.03C4 8.7 6.7 6 10.03 6h11.95C25.3 6 28 8.7 28 12.03v12.03c0 3.28-2.66 5.94-5.95 5.94Z"
        ></path><path
          fill="#212121"
          d="M9.247 18.5h13.506c2.33 0 4.247-1.919 4.247-4.25A4.257 4.257 0 0 0 22.753 10H9.247A4.257 4.257 0 0 0 5 14.25a4.257 4.257 0 0 0 4.247 4.25Zm4.225 7.5h5.056C19.34 26 20 25.326 20 24.5s-.66-1.5-1.472-1.5h-5.056C12.66 23 12 23.674 12 24.5s.66 1.5 1.472 1.5Z"
        ></path><path
          fill="#00A6ED"
          d="M10.25 12C9.56 12 9 12.56 9 13.25v2.5a1.25 1.25 0 1 0 2.5 0v-2.5c0-.69-.56-1.25-1.25-1.25Zm11.5 0c-.69 0-1.25.56-1.25 1.25v2.5a1.25 1.25 0 1 0 2.5 0v-2.5c0-.69-.56-1.25-1.25-1.25Z"
        ></path></g
      ></svg
    >
    <span class="gpt-subtitle">小易智能<br /><br /><br /></span>
    <div >请在下方输入用户名和密码，没有账号？ <a href="/register" class="text-blue-400">立即注册</a></div>
    <div class="w-100">
      <div class="flex mt-4 w-full">
        <span class="self-center w-1/5">用户名：</span>
        <input id="username_input" type="text" placeholder="邮箱/昵称" class="gpt-password-input w-4/5" />
      </div>
      <div class="flex mt-4 w-full relative">
        <span class="self-center w-1/5">密　码：</span>
        <input id="password_input" type="password" placeholder="8-20位大小写字母和数字" class="gpt-password-input w-4/5" />
        <div id="submit" class="gpt-password-submit absolute right-0 z-1">
          <div class="i-carbon-arrow-right"></div>
        </div>
      </div>
    </div>
  </main>
</Layout>

<script>

const userInput = document.getElementById('username_input') as HTMLInputElement
const pwdInput = document.getElementById('password_input') as HTMLInputElement
const submitButton = document.getElementById('submit') as HTMLDivElement

pwdInput.onkeydown = async(event) => {
  if (event.key === 'Enter') handleSubmit()
}
function showInvalid() {
  const me = this.parentNode
  me.classList.add('invalid')
  setTimeout(() => {
    me.classList.remove('invalid')
  }, 300)
}
submitButton.onclick = handleSubmit

async function handleSubmit() {
  const username = userInput.value
  const password = pwdInput.value
  if (!username) {
    showInvalid.call(userInput)
    return
  }
  if (/^(?=.*[a-z])(?=.*[A-Z])(?=.*\d).{8,20}$/.test(password)) {
    const response = await fetch('/api/login', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        user: username,
        pass: password,
      }),
    })
    const responseJson = await response.json()
    if (responseJson.code === 0) {
    // localStorage.setItem('pass', password)

      window.location.href = '/'
    } else {
      alert(responseJson.message)
    }
  } else {
    showInvalid.call(pwdInput)
    // alert('密码格式不正确，请输入8-20位的由大小写字母和数字组成的密码')
  }
}
</script>

<style>
  .login-content {
    justify-content: flex-start;
    padding: 8.5rem 2rem 7rem;
  }
  @keyframes shake {
    0% {
      transform: translateX(0);
    }
    25% {
      transform: translateX(0.5rem);
    }
    75% {
      transform: translateX(-0.5rem);
    }
    100% {
      transform: translateX(0);
    }
  }

  .invalid {
    animation: shake 0.2s ease-in-out 0s 2;
  }
</style>
